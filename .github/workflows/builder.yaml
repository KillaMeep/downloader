name: Build and Release

on:
  push:
  
jobs:
  job_1:
    name: Build
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Build
        run: |
          cd ${{ github.workspace }}
          pip install pipreqs
          curl -o installer.bat https://raw.githubusercontent.com/KillaMeep/downloader/main/installer.bat
          pip install pyinstaller
          cmd /c installer.bat
          cmd /c build.bat
      
      - name: Upload build result
        uses: actions/upload-artifact@v3
        with:
          name: downloader
          path: downloader.exe

  job_2:
    name: Create Release
    needs: job_1
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.PUSH_TOKEN }}

      - name: Create Git tag
        run: git tag -a -m "Release ${{ github.sha }}" "${{ github.sha:0:7 }}"

      - name: Push Git tag
        run: git push origin "${{ github.sha:0:7 }}"

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PUSH_TOKEN }}
        with:
          tag_name: "${{ github.sha:0:7 }}"
          release_name: "Release ${{ github.sha:0:7 }}"
          body: |
            Release ${{ github.sha:0:7 }}
            This is an automated release.

      - name: Download build artifact
        uses: actions/download-artifact@v3
        with:
          name: downloader
          path: downloader

      - name: Upload binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PUSH_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./downloader/downloader.exe
          asset_name: downloader.exe
          asset_content_type: application/octet-stream
